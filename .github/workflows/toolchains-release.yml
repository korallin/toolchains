name: ToolchainsRelease

on:
  push:
    tags:
    - 'v*'

jobs:

  archlinux:
    env:
        DIST_ID: archlinux
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build
      run: ./build-docker-${DIST_ID}.sh

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true 
        artifacts: "docker/distros/*/*.tar.*"
        artifactContentType: "application/gzip" 
        draft: false
        name: "Release ${{ github.ref }}"
        prerelease: true
        tag: ${{ github.ref }} 
        token: ${{ secrets.GITHUB_TOKEN }} 

  centos7:
    env:
        DIST_ID: centos7
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build
      run: ./build-docker-${DIST_ID}.sh

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true 
        artifacts: "docker/distros/*/*.tar.*"
        artifactContentType: "application/gzip" 
        draft: false
        name: "Release ${{ github.ref }}"
        prerelease: true
        tag: ${{ github.ref }} 
        token: ${{ secrets.GITHUB_TOKEN }} 

  fedora29:
    env:
        DIST_ID: fedora29
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build
      run: ./build-docker-${DIST_ID}.sh

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true 
        artifacts: "docker/distros/*/*.tar.*"
        artifactContentType: "application/gzip" 
        draft: false
        name: "Release ${{ github.ref }}"
        prerelease: true
        tag: ${{ github.ref }} 
        token: ${{ secrets.GITHUB_TOKEN }} 

  gentoo-amd64:
    env:
        DIST_ID: gentoo-amd64
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build
      run: ./build-docker-${DIST_ID}.sh

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true 
        artifacts: "docker/distros/*/*.tar.*"
        artifactContentType: "application/gzip" 
        draft: false
        name: "Release ${{ github.ref }}"
        prerelease: true
        tag: ${{ github.ref }} 
        token: ${{ secrets.GITHUB_TOKEN }} 

  mint19-amd64:
    env:
        DIST_ID: mint19-amd64
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build
      run: ./build-docker-${DIST_ID}.sh

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true 
        artifacts: "docker/distros/*/*.tar.*"
        artifactContentType: "application/gzip" 
        draft: false
        name: "Release ${{ github.ref }}"
        prerelease: true
        tag: ${{ github.ref }} 
        token: ${{ secrets.GITHUB_TOKEN }} 

  ubuntu16_04:
    env:
        DIST_ID: ubuntu16.04
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build
      run: ./build-docker-${DIST_ID}.sh

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true 
        artifacts: "docker/distros/*/*.tar.*"
        artifactContentType: "application/gzip" 
        draft: false
        name: "Release ${{ github.ref }}"
        prerelease: true
        tag: ${{ github.ref }} 
        token: ${{ secrets.GITHUB_TOKEN }} 

  ubuntu18_04:
    env:
        DIST_ID: ubuntu18.04
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build
      run: ./build-docker-${DIST_ID}.sh

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true 
        artifacts: "docker/distros/*/*.tar.*"
        artifactContentType: "application/gzip" 
        draft: false
        name: "Release ${{ github.ref }}"
        prerelease: true
        tag: ${{ github.ref }} 
        token: ${{ secrets.GITHUB_TOKEN }} 

